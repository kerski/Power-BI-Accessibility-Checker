table 'Page Visuals Alt Text'
	lineageTag: b2c23323-0602-4228-994a-93626955f203

	column 'Report Key'
		dataType: double
		formatString: 0
		isAvailableInMdx: false
		lineageTag: e21a0d1f-f8b8-4cd2-9591-3d6cc15b59f6
		summarizeBy: none
		sourceColumn: Report Key

		annotation SummarizationSetBy = Automatic

	column 'Page ID'
		dataType: double
		formatString: 0
		isAvailableInMdx: false
		lineageTag: bf57931e-d461-489c-8b94-5e1584f1e8ac
		summarizeBy: none
		sourceColumn: Page ID

		annotation SummarizationSetBy = Automatic

	column 'Page Name'
		dataType: string
		isAvailableInMdx: false
		lineageTag: 6e87d186-a680-4661-930a-879b49ea5df0
		summarizeBy: none
		sourceColumn: Page Name

		annotation SummarizationSetBy = Automatic

	column VisualID
		dataType: int64
		isHidden
		formatString: 0
		isAvailableInMdx: false
		lineageTag: 79ddf2ac-040d-4857-9247-d500ad194133
		summarizeBy: none
		sourceColumn: VisualID

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	column Name
		dataType: string
		isAvailableInMdx: false
		lineageTag: f34553c5-fb98-48ba-8b76-7acb8ed38c65
		summarizeBy: none
		sourceColumn: Name

		annotation SummarizationSetBy = Automatic

	column 'AltText Type'
		dataType: string
		isAvailableInMdx: false
		lineageTag: 78de84ff-6abe-40ca-b266-dc8067aa6a16
		summarizeBy: none
		sourceColumn: AltText Type

		annotation SummarizationSetBy = Automatic

	column 'AltText Value'
		dataType: string
		isAvailableInMdx: false
		lineageTag: 10552c82-9359-4ed3-9bd7-3ef8ab8e5bd5
		summarizeBy: none
		sourceColumn: AltText Value

		annotation SummarizationSetBy = Automatic

	partition 'Page Visuals Alt Text-3de6b7ad-992d-4c33-b50a-da897cb03f56' = m
		mode: import
		queryGroup: 'Page Visuals'
		source =
				let
				    // Load the initial data from the 'Page Visuals Starter' table
				    #"Loaded Page Visuals Starter" = #"Page Visuals Starter",
				
				    // Select specific columns from the source table
				    #"Removed Unnecessary Columns" = Table.SelectColumns(#"Loaded Page Visuals Starter", {"Report Key", "PageID", "Page Name", "VisualID", "name", "config", "singleVisual.vcObjects"}),
				
				    // Expand the 'singleVisual.vcObjects' column to include 'general'
				    #"Expanded VC Objects General" = Table.ExpandRecordColumn(#"Removed Unnecessary Columns", "singleVisual.vcObjects", {"general"}, {"singleVisual.vcObjects.general"}),
				
				    // Expand the 'singleVisual.vcObjects.general' column to include its list items
				    #"Expanded VC Objects General List" = Table.ExpandListColumn(#"Expanded VC Objects General", "singleVisual.vcObjects.general"),
				
				    // Add a new column 'generalPropertiesText' by converting JSON to text
				    #"Added General Properties Text Column" = Table.AddColumn(#"Expanded VC Objects General List", "generalPropertiesText", each Text.FromBinary(Json.FromValue([singleVisual.vcObjects.general]))),
				
				    // Invoke a custom function to expand JSON in 'generalPropertiesText' column
				    #"Invoked Expand JSON Function" = Table.AddColumn(#"Added General Properties Text Column", "expandedJSON", each fnExpandJSONImkeFeldman([generalPropertiesText])),
				
				    // Replace errors in the 'expandedJSON' column with null values
				    #"Replaced JSON Errors" = Table.ReplaceErrorValues(#"Invoked Expand JSON Function", {{"expandedJSON", null}}),
				
				    // Expand the 'expandedJSON' column to include specific fields
				    #"Expanded JSON Fields" = Table.ExpandTableColumn(#"Replaced JSON Errors", "expandedJSON", {"Value", "Level", "Sort", "SortBy", "Name", "Name.1", "Name.2", "Name.3", "Name.4", "Name.5", "Name.6", "Dots"}, {"Value", "Level", "Sort", "SortBy", "Name", "Name.1", "Name.2", "Name.3", "Name.4", "Name.5", "Name.6", "Dots"}),
				
				    // Filter rows to keep only those with 'Name.1' equal to 'altText'
				    #"Filtered Relevant Rows" = Table.SelectRows(#"Expanded JSON Fields", each [Name.1] = "altText"),
				
				    // Select specific columns from the filtered table
				    #"Removed Unnecessary Columns Again" = Table.SelectColumns(#"Filtered Relevant Rows", {"Report Key", "PageID", "Page Name", "VisualID", "name", "Value", "Name.3"}),
				
				    // Change the data type of specific columns
				    #"Changed Column Types" = Table.TransformColumnTypes(#"Removed Unnecessary Columns Again", {{"Value", type text}, {"Name.3", type text}, {"name", type text}}),
				
				    // Group rows by specific columns and combine 'Value' column
				    #"Grouped Rows by Columns" = Table.Group(#"Changed Column Types", {"Report Key", "PageID", "Page Name", "VisualID", "name", "Name.3"}, {{"Value", each Text.Combine([Value], " - "), type nullable text}}),
				
				    // Merge 'Name.3' and 'Value' columns into a single column
				    #"Merged Name and Value Columns" = Table.CombineColumns(#"Grouped Rows by Columns", {"Name.3", "Value"}, Combiner.CombineTextByDelimiter(":", QuoteStyle.None), "altText"),
				
				    // Split the 'altText' column into 'AltText Type' and 'AltText Value'
				    #"Split AltText Column" = Table.SplitColumn(#"Merged Name and Value Columns", "altText", Splitter.SplitTextByEachDelimiter({":"}, QuoteStyle.Csv, false), {"AltText Type", "AltText Value"}),
				
				    // Sort rows by 'VisualID' in ascending order
				    #"Sorted Rows by VisualID" = Table.Sort(#"Split AltText Column", {{"VisualID", Order.Ascending}}),
				
				    // Filter rows to keep only those with non-empty 'AltText Value'
				    #"Filtered Non-Empty AltText Rows" = Table.SelectRows(#"Sorted Rows by VisualID", each ([AltText Value] <> "''")),
				
				    // Rename specific columns
				    #"Renamed Columns" = Table.RenameColumns(#"Filtered Non-Empty AltText Rows", {{"name", "Name"}, {"PageID", "Page ID"}})
				in
				    #"Renamed Columns"

	annotation PBI_ResultType = Table

	annotation PBI_NavigationStepName = Navigation

