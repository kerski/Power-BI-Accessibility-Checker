table Reports
	lineageTag: 475c393c-4376-47b5-b20a-801a8c1241b6

	column 'Report Key'
		dataType: int64
		formatString: 0
		lineageTag: 8cffc94e-2f82-4e20-bdd9-754e9a2d19a7
		summarizeBy: none
		sourceColumn: Report Key

		annotation SummarizationSetBy = Automatic

	column 'Workspace ID'
		dataType: string
		lineageTag: 9e90ca0f-e2fe-420e-8345-5a81df73e639
		summarizeBy: none
		sourceColumn: Workspace ID

		annotation SummarizationSetBy = Automatic

	column 'Workspace Name'
		dataType: string
		lineageTag: 4760a9df-4f0f-4588-a9cd-6d037769ec8d
		summarizeBy: none
		sourceColumn: Workspace Name

		annotation SummarizationSetBy = Automatic

	column 'Report ID'
		dataType: string
		lineageTag: ff476a44-7370-48ec-8a27-df412716dcf9
		summarizeBy: none
		sourceColumn: Report ID

		annotation SummarizationSetBy = Automatic

	column 'Report Name'
		dataType: string
		lineageTag: a161c70a-80ac-4c29-9e1c-5e781fd5abec
		summarizeBy: none
		sourceColumn: Report Name

		annotation SummarizationSetBy = Automatic

	column 'Report Type'
		dataType: string
		lineageTag: b747d89a-cd86-4e3b-aa2c-61a73ccf383c
		summarizeBy: none
		sourceColumn: Report Type

		annotation SummarizationSetBy = Automatic

	partition Reports-d5d3e579-22d9-4076-8ad8-cc321f1843cf = m
		mode: import
		queryGroup: 'Report Layout'
		source =
				// Load the initial data from the 'Workspaces' table
				let
					Source = Workspaces,
				
				// Add a column by invoking a custom function to get reports in each group
					#"Invoked Custom Function" = Table.AddColumn(Source, "GetReportsInGroup", each fnGetReportsInGroup([Workspace ID])),
				
				// Parse the JSON in the 'GetReportsInGroup' column
					#"Parsed JSON" = Table.TransformColumns(#"Invoked Custom Function", {{"GetReportsInGroup", Json.Document}}),
				
				// Expand the 'GetReportsInGroup' column to include its records
					#"Expanded GetReportsInGroup" = Table.ExpandRecordColumn(#"Parsed JSON", "GetReportsInGroup", {"value"}, {"value"}),
				
				// Expand the 'value' column to include its list items
					#"Expanded value" = Table.ExpandListColumn(#"Expanded GetReportsInGroup", "value"),
				
				// Expand the 'value' column to include specific fields
					#"Expanded value1" = Table.ExpandRecordColumn(#"Expanded value", "value", {"id", "name", "reportType"}, {"Report ID", "Report Name", "Report Type"}),
				
				// Change the data type of specific columns
					#"Changed Type" = Table.TransformColumnTypes(#"Expanded value1", {{"Report ID", type text}, {"Report Name", type text}, {"Report Type", type text}}),
				
				// Add an index column starting from 1
					#"Added Index" = Table.AddIndexColumn(#"Changed Type", "Index", 1, 1, Int64.Type),
				
				// Reorder columns to a specific order
					#"Reordered Columns" = Table.ReorderColumns(#"Added Index", {"Index", "Workspace ID", "Workspace Name", "Report ID", "Report Name", "Report Type"}),
				
				// Rename the 'Index' column to 'Report Key'
					#"Renamed Columns" = Table.RenameColumns(#"Reordered Columns", {{"Index", "Report Key"}}),
				
				// Filter rows to keep only those with 'Report Type' equal to 'PowerBIReport'
					#"Filter For Power BI Reports" = Table.SelectRows(#"Renamed Columns", each ([Report Type] = "PowerBIReport")),
				
				// Apply an additional filter based on 'Report Filter' if it is not null or '*No Report Filter*'
					#"Filter for Report" = if #"Report Filter" = null or #"Report Filter" = "*No Report Filter*" then #"Filter For Power BI Reports" else Table.SelectRows(#"Filter For Power BI Reports", each [Report Name] = #"Report Filter")
				in
					#"Filter for Report"

	annotation PBI_ResultType = Table

	annotation PBI_NavigationStepName = Navigation

