DEFINE

	////// START TEST SETUP //////
	// Use function introduce in late 2024
	VAR _InitMeasures = SELECTCOLUMNS(
		INFO.VIEW.MEASURES(),
		"Table", [Table],
		"Column", [Name],
		"Type", [DataType],
		"Data Category", "",
		"Format String", SUBSTITUTE([FormatStringDefinition],"""","")
	)

	// Create preliminary schema table
	VAR _InitiColumns = SELECTCOLUMNS(
		FILTER(
			INFO.VIEW.COLUMNS(),
			[DataCategory] <> "RowNumber"
		),
		"Table", [Table],
		"Column", [Name],
		"Type", [DataType],
		"Data Category", [DataCategory],
		"Format String", [FormatString]
	)

	VAR _Schema = UNION(
		_InitMeasures,
		_InitiColumns
	)
	////// END TEST SETUP  //////

	////// INSERT EXPECTED SCHEMA //////
	// Set Expectations on the Schema
	VAR _Definition_of_ModelSchema = DATATABLE("Table",STRING,"Column",STRING,"Type",STRING,"Data Category",STRING,"Format String",STRING,{{"_Measures","Visual Count","Integer","","#,0"},{"_Measures","SVG Image URL","Text","",BLANK()},{"_Measures","SVG Code","Text","",BLANK()},{"_Measures","SVG Code Length","Integer","","#,0"},{"_Measures","Visual Type Hex Color","Text","",BLANK()},{"_Measures","Visual Type Forecolor","Text","",BLANK()},{"_Measures","SVG Text","Text","",BLANK()},{"_Measures","SVG Code No Text","Text","",BLANK()},{"Page Visual Colors","Contrast Color Value","Text","",BLANK()},{"Comparison Color","Contrast Compare","Number","","#,0"},{"Comparison Color","Pass Level","Text","",BLANK()},{"Comparison Color","Contrast Ratio","Text","",BLANK()},{"Comparison Color","Sample","Text","",BLANK()},{"Comparison Color","Pass Level Icon","Text","",BLANK()},{"Pages","PageID","Integer","Regular",BLANK()},{"Pages","name","Text","Regular",BLANK()},{"Pages","Page Name","Text","Regular",BLANK()},{"Pages","Ordinal","Integer","Regular","0"},{"Pages","visualContainers","Text","Regular",BLANK()},{"Pages","config","Text","Regular",BLANK()},{"Pages","Width","Currency","Regular","0"},{"Pages","Height","Currency","Regular","0"},{"Pages","Page Info","Text","Regular",BLANK()},{"Pages","Report Key","Integer","Regular","0"},{"Page Visuals","PageID","Integer","Regular",BLANK()},{"Page Visuals","VisualID","Integer","Regular",BLANK()},{"Page Visuals","Visual Type","Text","Regular",BLANK()},{"Page Visuals","AltText Type","Text","Regular",BLANK()},{"Page Visuals","AltText Value","Text","Regular",BLANK()},{"Page Visuals","Tab Order","Text","Regular",BLANK()},{"Page Visuals","Tab Order Sort","Text","Regular",BLANK()},{"Page Visuals","Actual X","Currency","Regular",BLANK()},{"Page Visuals","Actual Y","Currency","Regular",BLANK()},{"Page Visuals","Layer Order","Text","Regular",BLANK()},{"Page Visuals","Title Text Value","Text","Regular",BLANK()},{"Page Visuals","Width","Currency","Regular",BLANK()},{"Page Visuals","Height","Currency","Regular",BLANK()},{"_Measures","Value","Integer","Regular","0"},{"Page Visual Types","Hex Color","Text","Regular",BLANK()},{"Page Visual Types","Forecolor","Text","Regular",BLANK()},{"Page Visual Types","Visual Type","Text","Regular",BLANK()},{"Reports","Report Key","Integer","Regular","0"},{"Reports","Workspace ID","Text","Regular",BLANK()},{"Reports","Workspace Name","Text","Regular",BLANK()},{"Reports","Report ID","Text","Regular",BLANK()},{"Reports","Report Name","Text","Regular",BLANK()},{"Page Visual Titles","Page ID","Integer","Regular","0"},{"Page Visual Titles","VisualID","Integer","Regular","0"},{"Page Visual Titles","Title Show Type","Text","Regular",BLANK()},{"Page Visual Titles","Title Show Value","Text","Regular",BLANK()},{"Page Visual Titles","Title Text Type","Text","Regular",BLANK()},{"Page Visual Titles","Title Text Value","Text","Regular",BLANK()},{"Page Visuals Alt Text","Report Key","Currency","Regular","0"},{"Page Visuals Alt Text","Page ID","Currency","Regular","0"},{"Page Visuals Alt Text","Page Name","Text","Regular",BLANK()},{"Page Visuals Alt Text","VisualID","Integer","Regular","0"},{"Page Visuals Alt Text","name","Text","Regular",BLANK()},{"Page Visuals Alt Text","AltText Type","Text","Regular",BLANK()},{"Page Visuals Alt Text","AltText Value","Text","Regular",BLANK()},{"Page Visual Colors","VisualID","Integer","Regular","0"},{"Page Visual Colors","Name.1","Text","Regular",BLANK()},{"Page Visual Colors","Name.2","Text","Regular",BLANK()},{"Page Visual Colors","Color Value","Text","Regular",BLANK()},{"Page Visual Colors","Luminance","Currency","Regular",BLANK()},{"Comparison Color","Compare Color","Text","Regular",BLANK()},{"Comparison Color","Luminance","Currency","Regular",BLANK()},{"Comparison Color","Display Forecolor","Text","Regular",BLANK()}})

	// Get the schema for Table 1
	VAR _ModelSchema = SELECTCOLUMNS(
		FILTER(
			_schema,
			1 = 1
		),
		[Table],
		[Column],
		[Type],
		[Data Category],
		[Format String]
	)

	// For visual comparison
	VAR _CompareOutput = UNION(
		ADDCOLUMNS(
			EXCEPT(
				_Definition_of_ModelSchema,
				_ModelSchema
			),
			"Change", "Definition != Current"
		),
		ADDCOLUMNS(
			EXCEPT(
				_ModelSchema,
				_Definition_of_ModelSchema
			),
			"Change", "Current != Definition"
		)
	)

	/*Run Tests*/
	VAR _Tests = ROW(
		"TestName", "Model Schema matches expectations",
		"ExpectedValue", 0,
		// EXCEPT shows that it appears in the first table, but not the second
		"ActualValue", COUNTROWS(EXCEPT(
			_Definition_of_ModelSchema,
			_ModelSchema
		)) + COUNTROWS(EXCEPT(
			_ModelSchema,
			_Definition_of_ModelSchema
		)) + 0
	)

	/*Output Pass/Fail*/
	VAR _TestOutput =
	ADDCOLUMNS(
		_Tests,
		"Passed", [ExpectedValue] = [ActualValue]
	)

// Comment out if you want to see the differences
EVALUATE _TestOutput
EVALUATE _CompareOutput ORDER BY [Table],[Column]