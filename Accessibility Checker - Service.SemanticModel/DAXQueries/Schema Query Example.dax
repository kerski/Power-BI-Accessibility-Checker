DEFINE
	///////////////// SETUP SCHEMA TABLES ///////////////////
	// Use function introduce in late 2024
	VAR _InitMeasures = SELECTCOLUMNS(
		INFO.VIEW.MEASURES(),
		"Table", [Table],
		"Column", [Name],
		"Type", [DataType],
		"Data Category", "",
		"Format String", SUBSTITUTE([FormatStringDefinition],"""","")
	)

	// Create preliminary schema table
	VAR _InitiColumns = SELECTCOLUMNS(
		FILTER(
			INFO.VIEW.COLUMNS(),
			[DataCategory] <> "RowNumber"
		),
		"Table", [Table],
		"Column", [Name],
		"Type", [DataType],
		"Data Category", [DataCategory],
		"Format String", [FormatString]
	)

	VAR _Schema = UNION(
		_InitMeasures,
		_InitiColumns
	)

	//////////////  Model Specific //////////////////////////

	VAR _TableName = "MarvelFact"
	// Identifies all tables for the model, if FALSE then _TableName is used
	VAR _SelectAllTables = TRUE()
	
	
	VAR _TableCheck = SELECTCOLUMNS(
		FILTER(
			_schema,
			IF(_SelectAllTables,1=1,[Table] = _TableName)
		),
		[Table],
		[Column],
		[Type],
		[Data Category],
		[Format String]
	)

	VAR _DataTableOutput =
	SUMMARIZE(
		_TableCheck,
		[Table],
		[Column],
		[Data Category],
		[Format String],
		[Type],
		"X", "{" &
		"""" & [Table] & """" & "," &
		"""" & [Column] & """" & "," &
		"""" & [Type] & """" & "," &
		IF(
			ISBLANK([Data Category]),
			"BLANK()",
			"""" & [Data Category] & """"
		) & "," &
		IF(
			ISBLANK([Format String]),
			"BLANK()",
			"""" & SUBSTITUTE(
				[Format String],
				"""",
				""""""
			) & """"
		) &
		"}"
	)

	VAR _Results = CONCATENATEX(
		_DataTableOutput,
		[X],
		","
	)

EVALUATE
	ROW(
		"VAR _z=", "DATATABLE(""Table"",STRING,""Column"",STRING,""Type"",STRING,""Data Category"",STRING,""Format String"",STRING,{" & _Results & "})"
	)